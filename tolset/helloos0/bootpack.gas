	.file	"bootpack.c"
	.text
	.balign 2
.globl _memtest
	.def	_memtest;	.scl	2;	.type	32;	.endef
_memtest:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%esi
	pushl	%ebx
	xorl	%esi, %esi
	call	_io_load_eflags
	orl	$262144, %eax
	pushl	%eax
	call	_io_store_eflags
	call	_io_load_eflags
	popl	%edx
	testl	$262144, %eax
	je	L2
	movl	$1, %esi
L2:
	andl	$-262145, %eax
	pushl	%eax
	call	_io_store_eflags
	popl	%eax
	movl	%esi, %eax
	testb	%al, %al
	jne	L5
L3:
	pushl	12(%ebp)
	pushl	8(%ebp)
	call	_memtest_sub
	popl	%edx
	movl	%eax, %ebx
	popl	%ecx
	movl	%esi, %eax
	testb	%al, %al
	jne	L6
L4:
	leal	-8(%ebp), %esp
	movl	%ebx, %eax
	popl	%ebx
	popl	%esi
	popl	%ebp
	ret
L6:
	call	_load_cr0
	andl	$-1610612737, %eax
	pushl	%eax
	call	_store_cr0
	popl	%eax
	jmp	L4
L5:
	call	_load_cr0
	orl	$1610612736, %eax
	pushl	%eax
	call	_store_cr0
	popl	%ebx
	jmp	L3
	.data
LC0:
	.ascii "(%d, %d)\0"
LC1:
	.ascii "memory %dMB\0"
LC3:
	.ascii "[lcr %4d %4d]\0"
LC2:
	.ascii "%02X\0"
	.text
	.balign 2
.globl _HariMain
	.def	_HariMain;	.scl	2;	.type	32;	.endef
_HariMain:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	pushl	%ebx
	movl	$2, %ebx
	subl	$484, %esp
	call	_init_gdtidt
	call	_init_pic
	call	_io_sti
	leal	-348(%ebp), %eax
	pushl	%eax
	pushl	$32
	pushl	$_keyfifo
	call	_que_init
	leal	-476(%ebp), %eax
	pushl	%eax
	pushl	$128
	pushl	$_mousefifo
	call	_que_init
	pushl	$249
	pushl	$33
	call	_io_out8
	addl	$32, %esp
	pushl	$239
	pushl	$161
	call	_io_out8
	call	_init_keyboard
	call	_init_palette
	movswl	4086,%eax
	pushl	%eax
	movswl	4084,%eax
	pushl	%eax
	pushl	4088
	call	_init_screen8
	movswl	4084,%eax
	leal	-16(%eax), %ecx
	movl	%ecx, %eax
	cltd
	idivl	%ebx
	movl	%eax, %edi
	movswl	4086,%eax
	pushl	$14
	leal	-44(%eax), %ecx
	movl	%ecx, %eax
	cltd
	idivl	%ebx
	leal	-316(%ebp), %ebx
	movl	%eax, %esi
	pushl	%ebx
	call	_init_mouse_cursor8
	pushl	$16
	pushl	%ebx
	leal	-60(%ebp), %ebx
	pushl	%esi
	pushl	%edi
	pushl	$16
	pushl	$16
	movswl	4084,%eax
	pushl	%eax
	pushl	4088
	call	_putblock8_8
	addl	$60, %esp
	pushl	%esi
	pushl	%edi
	pushl	$LC0
	pushl	%ebx
	call	_sprintf
	pushl	%ebx
	pushl	$7
	pushl	$0
	pushl	$0
	movswl	4084,%eax
	pushl	%eax
	pushl	4088
	call	_putfonts8_asc
	addl	$40, %esp
	pushl	$-1073741825
	pushl	$4194304
	call	_memtest
	shrl	$20, %eax
	pushl	%eax
	pushl	$LC1
	pushl	%ebx
	call	_sprintf
	pushl	%ebx
	pushl	$7
	pushl	$32
	pushl	$0
	movswl	4084,%eax
	pushl	%eax
	pushl	4088
	call	_putfonts8_asc
	addl	$44, %esp
L8:
	call	_io_cli
	pushl	$_keyfifo
	call	_que_status
	pushl	$_mousefifo
	movl	%eax, %ebx
	call	_que_status
	popl	%edx
	leal	(%eax,%ebx), %eax
	popl	%ecx
	testl	%eax, %eax
	je	L26
	pushl	$_keyfifo
	call	_que_status
	popl	%ebx
	testl	%eax, %eax
	jne	L27
	pushl	$_mousefifo
	call	_que_status
	popl	%ecx
	testl	%eax, %eax
	je	L8
	pushl	$_mousefifo
	call	_que_pop
	movl	%eax, %ebx
	call	_io_sti
	movzbl	%bl, %eax
	pushl	%eax
	leal	-492(%ebp), %eax
	pushl	%eax
	call	_mouse_decode
	addl	$12, %esp
	testl	%eax, %eax
	je	L8
	pushl	-484(%ebp)
	pushl	-488(%ebp)
	pushl	$LC3
	leal	-60(%ebp), %eax
	pushl	%eax
	call	_sprintf
	addl	$16, %esp
	movl	-480(%ebp), %eax
	movb	$108, -59(%ebp)
	movb	$99, -58(%ebp)
	movb	$114, -57(%ebp)
	testl	$1, %eax
	je	L17
	movb	$76, -59(%ebp)
L18:
	pushl	$31
	pushl	$151
	pushl	$16
	pushl	$32
	pushl	$14
	movswl	4084,%eax
	pushl	%eax
	pushl	4088
	call	_boxfill8
	leal	-60(%ebp), %eax
	pushl	%eax
	pushl	$7
	pushl	$16
	pushl	$32
	movswl	4084,%eax
	pushl	%eax
	pushl	4088
	call	_putfonts8_asc
	leal	15(%esi), %eax
	addl	$52, %esp
	pushl	%eax
	leal	15(%edi), %eax
	pushl	%eax
	pushl	%esi
	pushl	%edi
	pushl	$14
	movswl	4084,%eax
	pushl	%eax
	pushl	4088
	call	_boxfill8
	addl	$28, %esp
	addl	-484(%ebp), %esi
	addl	-488(%ebp), %edi
	js	L28
L22:
	testl	%esi, %esi
	js	L29
L23:
	movswl	4084,%eax
	subl	$16, %eax
	cmpl	%eax, %edi
	jle	L24
	movl	%eax, %edi
L24:
	movswl	4086,%eax
	subl	$16, %eax
	cmpl	%eax, %esi
	jle	L25
	movl	%eax, %esi
L25:
	pushl	$16
	leal	-316(%ebp), %eax
	pushl	%eax
	pushl	%esi
	pushl	%edi
	pushl	$16
	pushl	$16
	movswl	4084,%eax
	pushl	%eax
	pushl	4088
	call	_putblock8_8
	addl	$32, %esp
	jmp	L8
L29:
	xorl	%esi, %esi
	jmp	L23
L28:
	xorl	%edi, %edi
	jmp	L22
L17:
	testl	$2, %eax
	je	L19
	movb	$82, -57(%ebp)
	jmp	L18
L19:
	andl	$4, %eax
	je	L18
	movb	$67, -58(%ebp)
	jmp	L18
L27:
	pushl	$_keyfifo
	call	_que_pop
	movl	%eax, %ebx
	call	_io_sti
	pushl	%ebx
	leal	-60(%ebp), %ebx
	pushl	$LC2
	pushl	%ebx
	call	_sprintf
	pushl	$31
	pushl	$15
	pushl	$16
	pushl	$0
	pushl	$14
	movswl	4084,%eax
	pushl	%eax
	pushl	4088
	call	_boxfill8
	addl	$44, %esp
	pushl	%ebx
	pushl	$7
	pushl	$16
	pushl	$0
	movswl	4084,%eax
	pushl	%eax
	pushl	4088
	call	_putfonts8_asc
	addl	$24, %esp
	jmp	L8
L26:
	call	_io_stihlt
	jmp	L8
	.def	_mouse_decode;	.scl	2;	.type	32;	.endef
	.def	_boxfill8;	.scl	2;	.type	32;	.endef
	.def	_que_pop;	.scl	2;	.type	32;	.endef
	.def	_io_stihlt;	.scl	2;	.type	32;	.endef
	.def	_que_status;	.scl	2;	.type	32;	.endef
	.def	_io_cli;	.scl	2;	.type	32;	.endef
	.def	_putfonts8_asc;	.scl	2;	.type	32;	.endef
	.def	_sprintf;	.scl	2;	.type	32;	.endef
	.def	_putblock8_8;	.scl	2;	.type	32;	.endef
	.def	_init_mouse_cursor8;	.scl	2;	.type	32;	.endef
	.def	_init_screen8;	.scl	2;	.type	32;	.endef
	.def	_init_palette;	.scl	2;	.type	32;	.endef
	.def	_init_keyboard;	.scl	2;	.type	32;	.endef
	.def	_io_out8;	.scl	2;	.type	32;	.endef
	.def	_que_init;	.scl	2;	.type	32;	.endef
	.def	_io_sti;	.scl	2;	.type	32;	.endef
	.def	_init_pic;	.scl	2;	.type	32;	.endef
	.def	_init_gdtidt;	.scl	2;	.type	32;	.endef
	.def	_memtest_sub;	.scl	2;	.type	32;	.endef
	.def	_store_cr0;	.scl	2;	.type	32;	.endef
	.def	_load_cr0;	.scl	2;	.type	32;	.endef
	.def	_io_store_eflags;	.scl	2;	.type	32;	.endef
	.def	_io_load_eflags;	.scl	2;	.type	32;	.endef
